const{db:db}=require("../db.js"),{body:body,validationResult:validationResult}=require("express-validator"),producValidator=[body("product_name").trim().notEmpty().withMessage("Product Name required"),body("product_code").trim().notEmpty().withMessage("Product Code required"),body("product_description").trim()];var products=[{id:1,name:"Product One",image:{id:1,path:"/static/images/img1/thumbs.png"}},{id:2,name:"Product Two",image:{id:2,path:"/static/images/img2/thumbs.jpg"}}];function getproductHTML(req,res){res.render("./backend/pages/product_manager/index",{title:"Media Manager",layout:"backend/layout/main"})}function getProductsJSON(req,res){const productsDb=db.prepare("\n        SELECT \n          P.id, \n          P.name, \n          P.onspecial,\n          P.showonline,\n          CASE \n              WHEN M.id IS NOT NULL THEN\n                  '/static/images/'|| M.name ||'/thumb'|| M.ext\n              ELSE ''\n          END AS path \n\n      FROM products AS P\n      LEFT JOIN media_used MU ON MU.id = P.mediaused_id AND MU.deleted_yn=0\n      LEFT JOIN media M ON M.id = MU.media_id AND M.deleted_yn=0\n      WHERE P.deleted_yn = 0 \n    ").all(),products=[];for(const product of productsDb)products.push({id:product.id,name:product.name,onspecial:product.onspecial,showonline:product.showonline,image:{path:product.path}});res.json(products)}function getSingleProduct(req,res){const{id:id}=req.body;if(0==id)res.render("./backend/pages/product_manager/editor",{title:"",product:{}});else{const row=db.prepare("\n        SELECT \n          P.id, \n          P.name, \n          P.description,\n          P.code,\n          P.instock,\n          P.onspecial,\n          P.showonline,\n          CASE \n              WHEN M.id IS NOT NULL THEN\n                  '/static/images/'|| M.name ||'/thumb'|| M.ext\n              ELSE ''\n          END AS path\n      FROM products AS P\n      LEFT JOIN media_used MU ON MU.id = P.mediaused_id AND MU.deleted_yn=0\n      LEFT JOIN media M ON M.id = MU.media_id AND M.deleted_yn=0\n      WHERE P.deleted_yn = 0 AND P.id=?\n    ").get(id);if(!row)return res.status(404).json({status:"error",message:"Product not found"});const product={id:row.id,name:row.name,code:row.code,descript:row.description,onspecial:1==row.onspecial,showonline:1==row.showonline,image:{path:row.path}};res.render("./backend/pages/product_manager/editor",{title:"",product:product})}}function addNewProduct(req,res){const{product_name:product_name,product_special:product_special,product_show:product_show}=req.body;console.log(product_name,product_special,product_show);const errors=validationResult(req);if(!errors.isEmpty())return res.status(400).json({status:"error",message:errors.array()});res.json({status:"success",message:"Product not found."})}function editExistingProduct(req,res){const errors=validationResult(req);if(!errors.isEmpty())return res.status(400).json({status:"error",message:errors.array()});const{product_id:product_id,product_name:product_name,product_description:product_description,product_code:product_code,product_stock:product_stock,product_special:product_special,product_show:product_show}=req.body;db.prepare("\n      UPDATE products SET [name]=:name, [description]=:descript, [code]=:code, [instock]=:instock, \n        [onspecial]=:onspecial, [showonline]=:showonline\n      WHERE id=:id\n      RETURNING id;\n    ").get({id:product_id,name:product_name,descript:product_description,code:product_code,instock:Number(product_stock),onspecial:void 0===product_special?0:1,showonline:void 0===product_show?0:1})&&res.status(200).json({status:"success",message:"Product is Save."}),res.status(404).json({status:"error",message:"Product not found."})}function removeExistingProduct(req,res){const{id:id}=req.body;db.prepare("\n    UPDATE products SET deleted_at=CURRENT_TIMESTAMP, deleted_yn=1, deleted_by_userid=1\n    WHERE id=:mediaid\n    RETURNING id;\n    ").get(id)?res.json({status:"success",message:"Product is removed."}):res.json({status:"error",message:"Somthing went wrong, please try again later."})}module.exports={producValidator:producValidator,getproductHTML:getproductHTML,getProductsJSON:getProductsJSON,getSingleProduct:getSingleProduct,addNewProduct:addNewProduct,editExistingProduct:editExistingProduct,removeExistingProduct:removeExistingProduct};