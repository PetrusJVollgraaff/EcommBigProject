const express=require("express"),path=require("path"),fs=require("fs"),sharp=require("sharp"),multer=require("multer"),router=express.Router(),projectRoot=path.join(__dirname,"../../.."),imgDir=path.join(projectRoot,"/public/images");function createUniqueFolder(baseName){let folderName=baseName,folderPath=path.join(imgDir,folderName),counter=1;for(;fs.existsSync(folderPath);)folderName=`${baseName}(${counter++})`,folderPath=path.join(imgDir,folderName);return fs.mkdirSync(folderPath,{recursive:!0}),{folderPath:folderPath,folderName:folderName}}fs.existsSync(imgDir)||fs.mkdirSync(imgDir,{recursive:!0});const storage=multer.diskStorage({destination:(req,file,cb)=>{var ext=path.extname(file.originalname).toLowerCase();const baseName=path.basename(file.originalname,ext)||"image",{folderPath:folderPath,folderName:folderName}=createUniqueFolder(baseName);req.uploadFolder=folderPath,file.folderName=folderName,file.ext=ext,cb(null,req.uploadFolder)},filename:(req,file,cb)=>{cb(null,"image"+path.extname(file.originalname))}}),upload=multer({storage:storage,limits:{fileSize:5242880},fileFilter:(req,file,cb)=>{const allowedTypes=/jpeg|jpg|png|gif|webp/,extname=allowedTypes.test(path.extname(file.originalname).toLowerCase()),mimetype=allowedTypes.test(file.mimetype);extname&&mimetype?cb(null,!0):cb(new Error("Only image files are allowed (jpg, png, webp, gif)."))}});async function shapeImage(file){const{width:width,height:height}=await sharp(file.path).metadata();for(key in sizes={large:{width:1920},medium:{width:600},thumb:{width:150,height:150}},sizes){const thumbFull=path.join(thumbsDir,key+file.ext);await sharp(file.path).resize(300,300,{fit:"cover"}).toFile(thumbFull)}return{id:db.prepare("INSERT INTO medias (name, type, width, height, ext, create_at, deleted_yn) VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP, 0) RETURNING id;").get(file.folderName,"image",width,height,file.ext).id,name:file.folderName,path:`/static/images/${file.folderName}/image${file.ext}`}}router.use(express.json()),router.use("/static",express.static(path.join(projectRoot,"/views/backend/pages/media_manager"))),router.get("/",((req,res)=>{res.render("./backend/pages/media_manager/index",{title:"Media Manager",layout:"backend/layout/main"})})),router.get("/getmedias",((req,res)=>{res.json([{id:1,name:"img1",path:"/static/images/img1/thumbs.png"},{id:2,name:"img2",path:"/static/images/img2/thumbs.jpg"}])})),router.post("/addmedia",((req,res)=>{upload.array("images",10)(req,res,(err=>{if(err)return res.status(400).json({success:!1,message:err.message});const uploadedFiles=req.files.map((file=>shapeImage(file)));res.setHeader("Content-Type","application/json"),res.setHeader("Content-Length",Buffer.byteLength(JSON.stringify(uploadedFiles))),res.send(uploadedFiles)}))})),router.delete("/removemedia",((req,res)=>{const{id:id}=req.body;res.json({status:"success"})})),module.exports=router;