const express=require("express"),path=require("path"),router=express.Router(),{db:db}=require("../../../db.js"),projectRoot=path.join(__dirname,"../../..");var products=[{id:1,name:"Product One",image:{id:1,path:"/static/images/img1/thumbs.png"}},{id:2,name:"Product Two",image:{id:2,path:"/static/images/img2/thumbs.jpg"}}];router.use(express.urlencoded({extended:!0})),router.use(express.json()),router.use("/static",express.static(path.join(projectRoot,"/views/backend/pages/product_manager"))),router.get("/",((req,res)=>{res.render("./backend/pages/product_manager/index",{title:"Media Manager",layout:"backend/layout/main"})})),router.get("/getproducts",((req,res)=>{const productsDb=db.prepare("\n        SELECT \n          P.id, \n          P.name, \n          P.onspecial,\n          P.showonline,\n          CASE \n              WHEN M.id IS NOT NULL THEN\n                  '/static/images/'|| M.name ||'/thumb'|| M.ext\n              ELSE ''\n          END AS path \n\n      FROM products AS P\n      LEFT JOIN media_used MU ON MU.id = P.mediaused_id AND MU.deleted_yn=0\n      LEFT JOIN media M ON M.id = MU.media_id AND M.deleted_yn=0\n      WHERE P.deleted_yn = 0 \n    ").all(),products=[];for(const product of productsDb)products.push({id:product.id,name:product.name,onspecial:product.onspecial,showonline:product.showonline,image:{path:product.path}});res.json(products)})),router.post("/getproduct",((req,res)=>{const{id:id}=req.body;if(console.log(id,"hello"),0==id)res.render("./backend/pages/product_manager/editor",{title:"",product:{}});else{const row=db.prepare("\n        SELECT \n          P.id, \n          P.name, \n          P.desciption,\n          P.code,\n          P.onspecial,\n          P.showonline,\n          CASE \n              WHEN M.id IS NOT NULL THEN\n                  '/static/images/'|| M.name ||'/thumb'|| M.ext\n              ELSE ''\n          END AS path \n\n      FROM products AS P\n      LEFT JOIN media_used MU ON MU.id = P.mediaused_id AND MU.deleted_yn=0\n      LEFT JOIN media M ON M.id = MU.media_id AND M.deleted_yn=0\n      WHERE P.deleted_yn = 0 AND P.id = ?\n    ").get(id),product={id:row.id,name:row.name,code:row.code,descript:row.desciption,onspecial:row.onspecial,showonline:row.showonline,image:{path:row.path}};res.render("./backend/pages/product_manager/editor",{title:"",product:product})}})),router.post("/addproduct",((req,res)=>{const{id:id}=req.body;console.log(id),res.json({status:"error",message:"Product not found."})})),router.put("/editproduct",((req,res)=>{const{id:id}=req.body;console.log(id),res.json({status:"error",message:"Product not found."})})),router.delete("/removeproduct",((req,res)=>{const{id:id}=req.body;db.prepare("\n    UPDATE products SET deleted_at=CURRENT_TIMESTAMP, deleted_yn=1, deleted_by_userid=1\n    WHERE id=:mediaid\n    RETURNING id;\n    ").get(id)?res.json({status:"success",message:"Product is removed."}):res.json({status:"error",message:"Somthing went wrong, please try again later."})})),module.exports=router;