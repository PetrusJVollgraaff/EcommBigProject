const LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),{db:db}=require("../db.js");function initialize(passport){passport.use(new LocalStrategy((async(username,password,done)=>{try{const user=db.prepare("SELECT * FROM users WHERE username = ?").get(username);if(!user)return done(null,!1,{message:"No user with that username"});if(!user)return done(null,!1,{message:"No user with that username"});return await bcrypt.compare(password,user.password)?done(null,{id:user.id,username:user.username}):done(null,!1,{message:"Password incorrect"})}catch(err){return err}}))),passport.serializeUser(((user,done)=>done(null,user.id))),passport.deserializeUser((async(id,done)=>{try{done(null,db.prepare("SELECT id, username, roleId FROM users WHERE id = ?").get(id)||null)}catch(err){done(err)}}))}module.exports=initialize;