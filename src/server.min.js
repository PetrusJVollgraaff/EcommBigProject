require("dotenv").config();const express=require("express"),expressLayouts=require("express-ejs-layouts"),path=require("path"),http=require("http"),fs=require("fs"),session=require("express-session"),SQLiteStore=require("connect-sqlite3")(session),passport=require("passport"),helmet=require("helmet"),methodOverride=require("method-override"),initializePassport=require("./scripts/passport-config"),routepath=path.join(__dirname,"routes"),viewspath=path.join(__dirname,"views"),imgDir=path.join(__dirname,"/public/images"),dbDir=path.join(__dirname,"db");fs.existsSync(imgDir)||fs.mkdirSync(imgDir,{recursive:!0});const FrontEndRoutes=require(routepath+"/frontend/main"),BackEndRoutes=require(routepath+"/modules/main"),BackEndLoginRoutes=require(routepath+"/modules/login"),PORT=process.env.PORT||3e3,app=express(),server=http.createServer(app);app.set("view engine","ejs"),app.set("views",viewspath),app.use(expressLayouts),app.set("layout","frontend/layout/main"),initializePassport(passport),app.use(helmet()),app.use(express.urlencoded({extended:!0})),app.use(express.json()),app.use(methodOverride("_method")),app.use(session({store:new SQLiteStore({db:"session.sqlite",dir:dbDir}),secret:process.env.SESSION_SECRET||"secret",resave:!1,saveUninitialized:!1,cookie:{maxAge:864e5}})),app.use(passport.initialize()),app.use(passport.session()),app.use("/static/images",express.static(imgDir)),app.use("/",FrontEndRoutes),app.use("/modules",BackEndRoutes),app.use("/edit",BackEndLoginRoutes),server.listen(PORT,(()=>{console.log(`Server started on http://localhost:${PORT}`)}));